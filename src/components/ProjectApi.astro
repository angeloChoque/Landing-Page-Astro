---
interface Hero {
  localized_name: string;
  attack_type: string;
  img: string;
  primary_attr: string;
}

const res = await fetch("https://api.opendota.com/api/heroStats");
const heroes: Hero[] = await res.json();

const IMG_URL = "https://cdn.cloudflare.steamstatic.com";
---

<div id="animation-carousel" class="relative w-full" data-carousel="static">
  <div class="relative h-56 overflow-hidden rounded-lg md:h-96">
    {
      heroes.map((item, index) => (
        <div
          class={`carousel-item ${
            index === 0 ? "active" : "hidden"
          } duration-200 ease-linear`}
          data-index={index}
        >
          <img
            src={`${IMG_URL}${item.img}`}
            class="absolute block w-full h-full object-cover -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2"
            alt={item.localized_name}
          />
          <div class="absolute bottom-0 left-0 bg-black bg-opacity-50 text-white p-4 w-full text-center">
            <p>
              {item.localized_name} - {item.primary_attr}
            </p>
          </div>
        </div>
      ))
    }
  </div>

  <button
    id="prevBtn"
    type="button"
    class="absolute top-0 start-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none"
  >
    <span
      class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/30 dark:bg-gray-800/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none"
    >
      <svg
        class="w-4 h-4 text-white dark:text-gray-800 rtl:rotate-180"
        aria-hidden="true"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 6 10"
      >
        <path
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M5 1 1 5l4 4"></path>
      </svg>
      <span class="sr-only">Previous</span>
    </span>
  </button>
  <button
    id="nextBtn"
    type="button"
    class="absolute top-0 end-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none"
  >
    <span
      class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/30 dark:bg-gray-800/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none"
    >
      <svg
        class="w-4 h-4 text-white dark:text-gray-800 rtl:rotate-180"
        aria-hidden="true"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 6 10"
      >
        <path
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="m1 9 4-4-4-4"></path>
      </svg>
      <span class="sr-only">Next</span>
    </span>
  </button>
</div>

<script>
  let currentIndex: number = 0;
  const items: NodeListOf<HTMLElement> =
    document.querySelectorAll(".carousel-item");

  function updateCarousel(): void {
    items.forEach((item, index) => {
      item.classList.toggle("active", index === currentIndex);
      item.classList.toggle("hidden", index !== currentIndex);
    });
  }

  const nextBtn = document.getElementById("nextBtn");
  const prevBtn = document.getElementById("prevBtn");

  if (nextBtn && prevBtn) {
    nextBtn.addEventListener("click", (): void => {
      currentIndex = (currentIndex + 1) % items.length;
      updateCarousel();
    });

    prevBtn.addEventListener("click", (): void => {
      currentIndex = (currentIndex - 1 + items.length) % items.length;
      updateCarousel();
    });

    updateCarousel();
  }
</script>
