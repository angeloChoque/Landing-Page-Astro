---
import NasaApi from "@/components/NasaApi.astro";
import ProjectApi from "@/components/ProjectApi.astro";
import BaseLayout from "@/layouts/BaseLayout.astro";
import { Icon } from "astro-icon/components";

const BADGE = [
  {
    name: "LinkendIn",
    file: "linkendin",
    link: "https://www.linkedin.com/in/angelochoquemaravi",
  },
  {
    name: "GitHub",
    file: "github",
    link: "https://github.com/angeloChoque",
  },
  {
    name: "Portfolio",
    file: "portfolio",
    link: "https://angelochoque.github.io/My-Portfolio/",
  },
];
---

<BaseLayout
  title="Page Practice Astro - Landing Page"
  description="Here you will find all the information about this project "
>
  <main id="home" class="px-8 md:px-0 pt-24">
    <section class="container max-w-xl m-auto mt-5 mb-28 text-center">
      <h1
        class="text-4xl sm:text-5xl pb-5 font-bold bg-clip-text text-transparent bg-gradient-to-r from-[#d83333] to-[#f041ff]"
      >
        PROJECT IN ASTRO
      </h1>
      <p class="mt-6 text-xl">
        In this project, I will demonstrate how to effectively implement Astro
        as a static site generator while exploring key ways to integrate dynamic
        functionalities. My goal is to build a strong foundation
        <strong class="text-[#fef08a]">
          by combining Astro with other important web technologies.
        </strong>
      </p>
      <nav class="flex items-center my-8 space-x-4 justify-center">
        {
          BADGE.map((title) => {
            return (
              <a
                href={title.link}
                target="_blank"
                rel="noopener noreferrer"
                class="flex items-center bg-gray-100 text-gray-800 text-sm font-semibold px-4 py-2 rounded-full dark:bg-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 transition"
              >
                <Icon name={title.file} class="mr-2" />
                {title.name}
              </a>
            );
          })
        }
      </nav>
    </section>
    <section id="api" class="max-w-4xl pt-16 m-auto">
      <h2
        class="text-3xl sm:text-4xl pb-10 font-bold bg-clip-text text-transparent bg-gradient-to-r from-[#d83333] to-[#f041ff] text-center"
      >
        API OPENDOTA2
      </h2>
      <p class="mb-20 text-xl">
        Here we are
        <strong class="text-[#fef08a]"> using a Dota 2 character API </strong>
        in which we will display data about them and it can also be used for other
        types of use.
      </p>
      <h3
        class="text-3xl mb-5 bg-clip-text text-transparent bg-gradient-to-r from-[#d83333] to-[#f041ff]"
      >
        HEROES:
      </h3>
      <ProjectApi />
      <p class="text-xl my-20">
        Here is an example of how to apply the open dota api in your astro
        project or any other using Javascript
      </p>
      <iframe
        src="https://www.youtube.com/embed/mOK0jVu5K_A"
        class="w-full aspect-video"
        title="YouTube video player"
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture "
        allowfullscreen
        sandbox="allow-scripts allow-same-origin"></iframe>
    </section>
    <section id="api2" class="pt-8 m-auto">
      <h2
        class="text-3xl sm:text-4xl py-10 font-bold bg-clip-text text-transparent bg-gradient-to-r from-[#d83333] to-[#f041ff] text-center"
      >
        API NASA
      </h2>
      <p class="pb-20 max-w-4xl text-xl m-auto">
        Here you will find an example using the to project
        <strong class="text-[#fef08a]"> astronomical image of the day </strong>
        , in which we see the photo and description in the middle.
      </p>
      <NasaApi />
    </section>
  </main>
</BaseLayout>
